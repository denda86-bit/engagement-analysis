-- EXASOL version: 6.0.3

-- EXERCISE 1
-- Create the table called TABLE_IMPRESSIONS and insert few records
CREATE TABLE TABLE_IMPRESSIONS(created_at timestamp, user_id  integer, poll_id  integer);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-13 11:18:43.859176',7,16);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-12 11:17:43.859200',7,20);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-11-10 11:16:43.859209',7,20);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-11-10 11:15:43.859214',7,20);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-11-10 11:14:43.859219',7,20);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-13 11:13:43.859224',8,16);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-11 11:12:43.859228',8,16);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-01 11:11:43.859233',8,16);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-09 11:10:43.859237',8,16);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-09 11:09:43.859241',9,2);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-09 11:08:43.859245',8,2);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-11 11:07:43.859249',7,2);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-11 11:06:43.859253',8,16);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-10 11:05:43.859257',9,20);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-11 11:04:43.859261',9,20);
INSERT INTO TABLE_IMPRESSIONS VALUES('2019-12-13 11:03:43.859265',9,20);

-- TASK: 1.1
SELECT DISTINCT count(created_at) OVER(PARTITION BY USER_ID) NUM_IMPR_USER
 , count(created_at) OVER(PARTITION BY POLL_ID) as NUM_IMPR_POLL
FROM TABLE_IMPRESSIONS;

-- TASK: 1.2
SELECT USER_ID, MIN(created_at) AS MIN_TIMESTAMP_USER
FROM TABLE_IMPRESSIONS
GROUP BY USER_ID;

-- TASK: 1.3
SELECT * FROM(SELECT USER_ID,
      CASE WHEN created_at=min(created_at) OVER(PARTITION BY USER_ID)
      THEN POLL_ID
      ELSE NULL
      END MIN_TIME_POLL_ID
FROM TABLE_IMPRESSIONS) WHERE MIN_TIME_POLL_ID IS NOT NULL;

 -- EXERCISE 2
 -- Create the table called TABLE_2 and insert few records, also duplicates
CREATE TABLE TABLE_2(user_id2  integer);
INSERT INTO TABLE_2 VALUES(5);
INSERT INTO TABLE_2 VALUES(6);
INSERT INTO TABLE_2 VALUES(4);
INSERT INTO TABLE_2 VALUES(5);
INSERT INTO TABLE_2 VALUES(6);
INSERT INTO TABLE_2 VALUES(17);
INSERT INTO TABLE_2 VALUES(8);
INSERT INTO TABLE_2 VALUES(9);
INSERT INTO TABLE_2 VALUES(10);
INSERT INTO TABLE_2 VALUES(11);
INSERT INTO TABLE_2 VALUES(11);
INSERT INTO TABLE_2 VALUES(12);
INSERT INTO TABLE_2 VALUES(13);
INSERT INTO TABLE_2 VALUES(14);
INSERT INTO TABLE_2 VALUES(15);
INSERT INTO TABLE_2 VALUES(16);

-- TASK: 2.1 AND 2.2
-- IF DUPLICATES IN THE TABLE_2, IN THE LEFT JOIN THE DISTINCT USER IDS ARE CONSIDERED, AS SHOWN BELOW
SELECT DISTINCT T1.USER_ID,
CASE
    WHEN T2.USER_ID2 IS NOT NULL
        THEN 1
        ELSE 0
    END AS IN_TABLE_TWO
FROM TABLE_IMPRESSIONS AS T1
LEFT JOIN (SELECT DISTINCT * FROM TABLE_2) AS T2
ON T1.USER_ID=T2.USER_ID2;

-- EXERCISE 3
-- Create the table called TABLE_OLD and insert few records
CREATE TABLE TABLE_OLD(USER_ID integer, LAST_VOTE timestamp);
INSERT INTO TABLE_OLD VALUES(123, '2015-03-08');
INSERT INTO TABLE_OLD VALUES(234, '2018-02-09');

-- Create the table called TABLE_NEW with the updated records
CREATE TABLE TABLE_NEW(USER_ID integer, LAST_VOTE timestamp);
INSERT INTO TABLE_NEW VALUES(234, '2019-08-18');
INSERT INTO TABLE_NEW VALUES(342, '2019-07-12');
INSERT INTO TABLE_NEW VALUES(345, '2019-03-23');

-- Create the table called TABLE_VOTES which will be used for the merge sql
CREATE TABLE TABLE_VOTES AS SELECT * FROM TABLE_OLD;

-- TASK: 3.1
MERGE INTO TABLE_VOTES T
USING TABLE_NEW S
ON T.USER_ID=S.USER_ID
WHEN MATCHED THEN UPDATE SET T.LAST_VOTE=S.LAST_VOTE
WHEN NOT MATCHED THEN INSERT VALUES(S.USER_ID, S.LAST_VOTE);